// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  email     String   @unique @db.VarChar(100)
  name      String   @db.VarChar(30)
  password  String
  role      Int      @default(1)
  quizzes   Quiz[]
  comments  Comment[]

  @@map("users")
}

model BigCategory {
  id               Int              @default(autoincrement()) @id
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  name             String           @db.VarChar(30)
  mediumCategories MediumCategory[]

  @@map("big_categories")
}

model MediumCategory {
  id              Int             @default(autoincrement()) @id
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")
  name            String          @db.VarChar(30)
  bigCategory     BigCategory     @relation(fields: [bigCategoryId], references: [id])
  bigCategoryId   Int             @map("big_category_id")
  smallCategories SmallCategory[]

  @@map("medium_categories")
}

model SmallCategory {
  id                 Int            @default(autoincrement()) @id
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")
  name               String         @db.VarChar(30)
  mediumCategory     MediumCategory @relation(fields: [mediumCategoryId], references: [id])
  mediumCategoryId   Int            @map("medium_category_id")
  quizzes            Quiz[]

  @@map("small_categories")
}

model Quiz {
  id               Int           @default(autoincrement()) @id
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime      @updatedAt @map("updated_at")
  question         String
  choice           Json
  answer           String
  solution         String
  smallCategory    SmallCategory @relation(fields: [smallCategoryId], references: [id])
  smallCategoryId  Int           @map("small_category_id")
  user             User          @relation(fields: [userId], references: [id])
  userId           Int           @map("user_id")
  comments         Comment[]

  @@map("quizzes")
}

model Comment {
  id              Int        @default(autoincrement()) @id
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  user            User       @relation(fields: [userId], references: [id])
  userId          Int        @map("user_id")
  quiz            Quiz       @relation(fields: [quizId], references: [id])
  quizId          Int        @map("quiz_id")
  content         String

  @@map("comments")
}
